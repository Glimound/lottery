<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.glimound.lottery.infrastructure.dao.IActivityDao">
    <insert id="insertActivity" parameterType="activity">
        INSERT INTO lottery.activity
        (activity_id, activity_name, activity_desc, begin_date_time, end_date_time, stock_count, stock_surplus_count,
         take_count, strategy_id, state, creator, create_time, update_time)
        VALUES
        (#{activityId}, #{activityName}, #{activityDesc}, #{beginDateTime}, #{endDateTime}, #{stockCount},
         #{stockSurplusCount}, #{takeCount}, #{strategyId}, #{state}, #{creator}, now(), now())
    </insert>

    <update id="alterState">
        UPDATE lottery.activity
        SET state = #{afterState}
        WHERE activity_id = #{activityId} AND state = #{beforeState}
    </update>

    <update id="deductActivityStockById">
        UPDATE lottery.activity SET stock_surplus_count = stock_surplus_count - 1
        WHERE activity_id = #{activityId} AND stock_surplus_count > 0
    </update>

    <update id="updateActivityStock">
        UPDATE lottery.activity SET stock_surplus_count = #{stockSurplusCount}
        WHERE activity_id = #{activityId} AND stock_surplus_count > #{stockSurplusCount}
    </update>

    <select id="getActivityById" resultType="activity">
        SELECT id, activity_id, activity_name, activity_desc, begin_date_time, end_date_time, stock_count,
               stock_surplus_count, take_count, strategy_id, state, creator, create_time, update_time
        FROM lottery.activity
        WHERE activity_id = #{activityId}
    </select>

    <select id="listToDoActivity" resultType="Activity">
        SELECT id, activity_id, activity_name, begin_date_time, end_date_time, state, creator
        FROM lottery.activity
        WHERE id > #{id} AND state in (4,5)
        ORDER BY ID ASC
        LIMIT 10
    </select>

</mapper>